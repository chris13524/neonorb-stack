use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'hook/bug/edit-after_importance.html.tmpl',
        'modtime' => '1422386282',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 25 "extensions/Voting/template/en/default/hook/bug/edit-after_importance.html.tmpl"
    if ($stash->get(['bug', 0, 'product_obj', 0, 'votesperuser', 0])) {
    $output .=  "\n  <span id=\"votes_container\">";
#line 20 "extensions/Voting/template/en/default/hook/bug/edit-after_importance.html.tmpl"
    if ($stash->get(['bug', 0, 'votes', 0])) {
    $output .=  "\n      with\n      <a href=\"page.cgi?id=voting/bug.html&amp;bug_id=";
#line 13 "extensions/Voting/template/en/default/hook/bug/edit-after_importance.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 14 "extensions/Voting/template/en/default/hook/bug/edit-after_importance.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'votes', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " ";
#line 19 "extensions/Voting/template/en/default/hook/bug/edit-after_importance.html.tmpl"
    if ($stash->get(['bug', 0, 'votes', 0]) eq 1) {
    $output .=  "\n            vote";
    }
    else {
    $output .=  "\n            votes";
    }
    
    $output .=  "</a>";
    }
    
    $output .=  "\n    (<a href=\"page.cgi?id=voting/user.html&amp;bug_id=";
#line 22 "extensions/Voting/template/en/default/hook/bug/edit-after_importance.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "#vote_";
#line 23 "extensions/Voting/template/en/default/hook/bug/edit-after_importance.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">vote</a>)\n  </span>";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
