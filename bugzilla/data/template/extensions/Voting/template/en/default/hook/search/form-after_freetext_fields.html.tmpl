use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'hook/search/form-after_freetext_fields.html.tmpl',
        'modtime' => '1422386282',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n<div class=\"search_field_row\">\n  <span class=\"field_label \">\n    <label for=\"votes\">Only ";
#line 11 "extensions/Voting/template/en/default/hook/search/form-after_freetext_fields.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " with at least</label>:\n  </span>\n  <input name=\"votes\" id=\"votes\" size=\"3\"\n         value=\"";
#line 14 "extensions/Voting/template/en/default/hook/search/form-after_freetext_fields.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['default', 0, 'votes', 0, 0, 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"> votes\n  <input type=\"hidden\" name=\"votes_type\" value=\"greaterthaneq\">\n</div>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
