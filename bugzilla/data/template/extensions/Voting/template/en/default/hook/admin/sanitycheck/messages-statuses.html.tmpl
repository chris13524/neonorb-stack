use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1422386282',
        'name' => 'hook/admin/sanitycheck/messages-statuses.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 29 "extensions/Voting/template/en/default/hook/admin/sanitycheck/messages-statuses.html.tmpl"
    if ($stash->get('san_tag') eq 'voting_cache_rebuild_fix') {
    $output .=  "\n    <a href=\"sanitycheck.cgi?rebuild_vote_cache=1&amp;token=";
#line 11 "extensions/Voting/template/en/default/hook/admin/sanitycheck/messages-statuses.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['issue_hash_token', [ [ 'sanitycheck' ] ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">Click here to\n    rebuild the vote cache</a>\n";
    }
    elsif ($stash->get('san_tag') eq 'voting_cache_alert') {
    $output .=  "\n    Bad vote cache for ";
#line 15 "extensions/Voting/template/en/default/hook/admin/sanitycheck/messages-statuses.html.tmpl"
    $output .=  $context->process('bug_link', { 'bug_id' => $stash->get('id') });
    $output .=  "\n";
    }
    elsif ($stash->get('san_tag') eq 'voting_count_start') {
    $output .=  "\n    Checking cached vote counts.\n";
    }
    elsif ($stash->get('san_tag') eq 'voting_count_alert') {
    $output .=  "\n    Bad vote sum for ";
#line 21 "extensions/Voting/template/en/default/hook/admin/sanitycheck/messages-statuses.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
#line 21 "extensions/Voting/template/en/default/hook/admin/sanitycheck/messages-statuses.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('san_tag') eq 'voting_cache_rebuild_start') {
    $output .=  "\n    OK, now rebuilding vote cache.\n";
    }
    elsif ($stash->get('san_tag') eq 'voting_cache_rebuild_end') {
    $output .=  "\n    Vote cache has been rebuilt\n";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
