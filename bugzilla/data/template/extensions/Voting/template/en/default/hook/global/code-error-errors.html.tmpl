use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1422386282',
        'name' => 'hook/global/code-error-errors.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 13 "extensions/Voting/template/en/default/hook/global/code-error-errors.html.tmpl"
    if ($stash->get('error') eq 'voting_no_open_bug_status') {
#line 1 "extensions/Voting/template/en/default/hook/global/code-error-errors.html.tmpl"
    $stash->set('title', ($stash->get(['terms', 0, 'Bug', 0]) . " Cannot Be Confirmed"));
    $output .=  "\n    There is no valid transition from\n    ";
#line 12 "extensions/Voting/template/en/default/hook/global/code-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['display_value', [ 'bug_status', 'UNCONFIRMED' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " to an open state";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
