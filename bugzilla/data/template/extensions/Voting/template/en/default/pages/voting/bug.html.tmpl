use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1422386282',
        'name' => 'pages/voting/bug.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 18 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    
    # CAPTURE
    $stash->set('subheader', do {
        my $output = '';
#line 1 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get('bug') ])
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['terms', 0, 'Bug', 0]) . " " . $stash->get(['bug', 0, 'id', 0]));
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  " - ";
#line 17 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'short_desc', 0]);
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    $output .=  "\n";
#line 20 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Show Votes', 'subheader' => $stash->get('subheader') });
    $output .=  "\n";
#line 25 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    $stash->set('total', 0);
    $output .=  "\n<table cellspacing=\"4\">\n  <tr>\n    <th>Who</th>\n    <th>Number of votes</th>\n  </tr>\n";
#line 45 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('users');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'voter'} = $_tt_value;
#line 33 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    $stash->set('total', $stash->get('total') + $stash->get(['voter', 0, 'vote_count', 0]));
    $output .=  "\n    <tr>\n      <td>\n          <a href=\"page.cgi?id=voting/user.html&amp;user_id=";
#line 37 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['voter', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 38 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('email')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['voter', 0, 'login_name', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n        </a>\n      </td>\n      <td align=\"right\">";
#line 42 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['voter', 0, 'vote_count', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n      </td>\n    </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n\n<p>Total votes: ";
#line 48 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('total');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</p>\n";
#line 50 "extensions/Voting/template/en/default/pages/voting/bug.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
