use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1422386282',
        'name' => 'hook/global/user-error-errors.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 43 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    if ($stash->get('error') eq 'voting_must_be_nonnegative') {
#line 10 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Votes Must Be Non-negative');
#line 11 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('admindocslinks', { 'voting.html' => 'Setting up the voting feature'  });
    $output .=  "\n    Only use non-negative numbers for your ";
#line 12 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " votes.\n";
    }
    elsif ($stash->get('error') eq 'voting_product_illegal_votes') {
#line 15 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Votes Must Be Non-negative');
#line 16 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('admindocslinks', { 'voting.html' => 'Setting up the voting feature'  });
    $output .=  "\n    '";
#line 17 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('votes');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is an invalid value for the\n    <em>";
#line 25 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    if ($stash->get('field') eq 'votesperuser') {
    $output .=  "\n      Votes Per User";
    }
    elsif ($stash->get('field') eq 'maxvotesperbug') {
    $output .=  "\n      Maximum Votes Per ";
#line 22 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    }
    elsif ($stash->get('field') eq 'votestoconfirm') {
    $output .=  "\n      Votes To Confirm";
    }
    
    $output .=  "\n    </em> field, which should contain a non-negative number.\n";
    }
    elsif ($stash->get('error') eq 'voting_too_many_votes_for_bug') {
#line 29 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Illegal Vote');
#line 30 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('admindocslinks', { 'voting.html' => 'Setting up the voting feature'  });
    $output .=  "\n    You may only use at most ";
#line 31 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('max');
        
        &$_tt_filter($output);
    };
    
    $output .=  " votes for a single\n    ";
#line 32 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " in the\n    <tt>";
#line 33 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt> product, but you are trying to\n    use ";
#line 34 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('votes');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'voting_too_many_votes_for_product') {
#line 37 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('title', 'Illegal Vote');
#line 38 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    $stash->set('admindocslinks', { 'voting.html' => 'Setting up the voting feature'  });
    $output .=  "\n    You tried to use ";
#line 39 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('votes');
        
        &$_tt_filter($output);
    };
    
    $output .=  " votes in the\n    <tt>";
#line 40 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt> product, which exceeds the maximum of\n    ";
#line 41 "extensions/Voting/template/en/default/hook/global/user-error-errors.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('max');
        
        &$_tt_filter($output);
    };
    
    $output .=  " votes for this product.\n";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
