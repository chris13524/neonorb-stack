{
"version":3,
"file":"credentials-check.js",
"lineCount":4,
"mappings":"A;AACAA,GAAAC,UAAA,CAAc,mBAAd,CAAmC,CAAC,OAAD,CAAU,IAAV,CAAgB,UAAhB,CAA4B,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAYC,CAAZ,CAAsB,CAC5F,MAAO,CACNC,SAAU,GADJ,CAENC,QAAS,SAFH,CAGNC,MAAO,CACNC,kBAAmB,GADb,CAHD,CAMNC,KAAMA,QAAQ,CAACF,CAAD,CAAQ,CACrBH,CAAA,CAAS,QAAQ,EAAE,CAClBG,CAAAC,kBAAAE,iBAAAF,kBAAA,CAA6DG,QAAQ,CAACC,CAAD,CAAW,CAC/E,MAAiC,WAAjC,EAAG,MAAOC,mBAAV,EAAgDD,CAAhD,EAA4DC,kBAAA,EAA5D,CACQ,CAAA,CADR,CAGQX,CAAAY,IAAA,CAAU,mCAAV,CAAgDF,CAAhD,CAAAG,KAAA,CAA+D,QAAQ,EAAG,CAChF,MAAO,CAAA,CADyE,CAA1E,CAEJ,QAAQ,EAAE,CACZ,MAAOZ,EAAAa,OAAA,CAAU,QAAV,CADK,CAFN,CAJuE,CAD9D,CAAnB,CADqB,CANhB,CADqF,CAA1D,CAAnC,CA0BAhB;GAAAC,UAAA,CAAc,gBAAd,CAAgC,CAAC,OAAD,CAAU,IAAV,CAAgB,UAAhB,CAA4B,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAYC,CAAZ,CAAsB,CACzF,MAAO,CACNC,SAAU,GADJ,CAENC,QAAS,SAFH,CAGNC,MAAO,CACNU,eAAgB,GADV,CAHD,CAMNR,KAAMA,QAAQ,CAACF,CAAD,CAAQ,CACrBH,CAAA,CAAS,QAAQ,EAAE,CAClBG,CAAAU,eAAAP,iBAAAO,eAAA,CAAuDC,QAAQ,CAACC,CAAD,CAAQ,CACtE,MAA8B,WAA9B,EAAG,MAAOC,gBAAV,EAA6CD,CAA7C,EAAsDC,eAAA,EAAtD,CACQjB,CAAAkB,QAAA,EADR,CAGQnB,CAAAY,IAAA,CAAU,6BAAV,CAA0CK,CAA1C,CAAAJ,KAAA,CAAsD,QAAQ,EAAG,CACvE,MAAO,CAAA,CADgE,CAAjE,CAEJ,QAAQ,EAAE,CACZ,MAAOZ,EAAAa,OAAA,CAAU,QAAV,CADK,CAFN,CAJ8D,CADrD,CAAnB,CADqB,CANhB,CADkF,CAA1D,CAAhC,CA0BAhB;GAAAC,UAAA,CAAc,SAAd,CAAyB,QAAQ,EAAG,CACnC,MAAO,CACNI,SAAU,GADJ,CAENC,QAAS,SAFH,CAGNC,MAAO,CACNe,gBAAiB,UADX,CAHD,CAMNb,KAAMA,QAAQ,CAACF,CAAD,CAAQgB,CAAR,CAAcC,CAAd,CAAqBC,CAArB,CAAiC,CAC9CA,CAAAC,YAAAC,QAAA,CAAiCC,QAAQ,CAACC,CAAD,CAAa,CACrD,MAAoC,WAApC,EAAG,MAAOtB,EAAAe,gBAAV,CACQ,CAAA,CADR,CAGOO,CAHP,EAGqBtB,CAAAe,gBAAAQ,WAJgC,CAMtDvB,EAAAwB,OAAA,CAAa,QAAQ,EAAG,CACvBN,CAAAO,UAAA,EADuB,CAAxB,CAGAzB,EAAAwB,OAAA,CAAa,iBAAb,CAAgC,QAAQ,EAAG,CAC1CN,CAAAO,UAAA,EAD0C,CAA3C,CAV8C,CANzC,CAD4B,CAApC;",
"sources":["credentials-check.unminified.js"],
"names":["app","directive","$http","$q","$timeout","restrict","require","scope","usernameAvailable","link","$asyncValidators","scope.usernameAvailable.$asyncValidators.usernameAvailable","username","getCurrentUsername","get","then","reject","emailAvailable","scope.emailAvailable.$asyncValidators.emailAvailable","email","getCurrentEmail","resolve","otherModelValue","elem","attrs","controller","$validators","equalTo","controller.$validators.equalTo","modelValue","$viewValue","$watch","$validate"]
}
